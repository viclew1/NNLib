package fr.lewon.ui.panels;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import fr.lewon.utils.ImageUtil;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.io.File;
import java.io.IOException;

public class ExportToolsPanel extends JPanel {

    private static final long serialVersionUID = -7252501371547814102L;

    private JButton exportBtn;
    private JTextField directoryTxt;
    private JButton selectDirectoryBtn;
    private JPanel mainPane;

    private JFileChooser chooser;

    public ExportToolsPanel() {
        try {
            this.selectDirectoryBtn.setIcon(new ImageIcon(ImageUtil.INSTANCE.resizeImageConserveHeight("/icons/book.png", (int) this.selectDirectoryBtn.getPreferredSize().getHeight())));
        } catch (IOException e) {
            e.printStackTrace();
        }
        this.add(this.mainPane);
        this.chooser = new JFileChooser();
        File currentDir = new File(".");
        this.chooser.setCurrentDirectory(currentDir);
        this.directoryTxt.setText(currentDir.getAbsolutePath());
        this.chooser.setDialogTitle("Select export directory");
        this.chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

        this.selectDirectoryBtn.addActionListener(e -> this.selectDirectory(e));
        this.exportBtn.addActionListener(e -> this.exportSelectedIndividuals(e));
    }

    private void exportSelectedIndividuals(ActionEvent e) {
    }

    private void selectDirectory(ActionEvent e) {
        if (this.chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            this.directoryTxt.setText(this.chooser.getSelectedFile().getAbsolutePath());
            this.chooser.setCurrentDirectory(this.chooser.getSelectedFile());
        }
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        this.$$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPane = new JPanel();
        mainPane.setLayout(new GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), -1, -1));
        exportBtn = new JButton();
        exportBtn.setText("Export");
        mainPane.add(exportBtn, new GridConstraints(1, 0, 1, 3, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        directoryTxt = new JTextField();
        directoryTxt.setEditable(false);
        directoryTxt.setText("");
        mainPane.add(directoryTxt, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension(150, -1), new Dimension(200, -1), null, 0, false));
        selectDirectoryBtn = new JButton();
        selectDirectoryBtn.setHideActionText(false);
        selectDirectoryBtn.setText("");
        selectDirectoryBtn.setToolTipText("Select directory");
        mainPane.add(selectDirectoryBtn, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_NORTHEAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        mainPane.add(spacer1, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPane;
    }
}
